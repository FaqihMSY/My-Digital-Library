import{_ as n,c as t,o as e,ae as i}from"./chunks/framework.BlRNOFgT.js";const c=JSON.parse('{"title":"Rangkuman Materi Database Security (IF3140 - Sistem Basis Data)","description":"","frontmatter":{},"headers":[],"relativePath":"system-database/database-security.md","filePath":"system-database/database-security.md"}'),r={name:"system-database/database-security.md"};function s(o,a,l,d,u,g){return e(),t("div",null,[...a[0]||(a[0]=[i('<h1 id="rangkuman-materi-database-security-if3140-sistem-basis-data" tabindex="-1">Rangkuman Materi Database Security (IF3140 - Sistem Basis Data) <a class="header-anchor" href="#rangkuman-materi-database-security-if3140-sistem-basis-data" aria-label="Permalink to &quot;Rangkuman Materi Database Security (IF3140 - Sistem Basis Data)&quot;">​</a></h1><h2 id="database-security-and-authorization" tabindex="-1">Database Security and Authorization <a class="header-anchor" href="#database-security-and-authorization" aria-label="Permalink to &quot;Database Security and Authorization&quot;">​</a></h2><ul><li><strong>Memahami isu-isu keamanan database</strong> seperti legal, etika, kebijakan, dan sistem.</li><li><strong>Ancaman utama</strong> meliputi kehilangan integritas, ketersediaan, dan kerahasiaan data.</li><li><strong>Jenis kontrol keamanan</strong> mencakup access control, inference control, flow control, dan enkripsi.</li><li><strong>Mekanisme keamanan</strong> terdiri dari discretionary (fleksibel, memberikan hak akses spesifik) dan mandatory (berbasis klasifikasi tingkat keamanan).</li><li><strong>Peran DBA</strong> sebagai otoritas utama yang mengelola keamanan, termasuk membuat akun dan menetapkan hak akses.</li></ul><h3 id="seluruh-tabel-perbandingan" tabindex="-1">Seluruh Tabel Perbandingan <a class="header-anchor" href="#seluruh-tabel-perbandingan" aria-label="Permalink to &quot;Seluruh Tabel Perbandingan&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Aspek</th><th>Discretionary Security</th><th>Mandatory Security</th></tr></thead><tbody><tr><td><strong>Karakteristik</strong></td><td>Memberikan hak akses fleksibel</td><td>Mengklasifikasi data dan user berdasarkan tingkat keamanan</td></tr><tr><td><strong>Keunggulan</strong></td><td>Cocok untuk berbagai aplikasi</td><td>Mencegah aliran informasi ilegal</td></tr><tr><td><strong>Kelemahan</strong></td><td>Rentan terhadap serangan seperti Trojan horse</td><td>Terlalu kaku, hanya cocok untuk lingkungan terbatas</td></tr></tbody></table><h3 id="contoh-soal-latihan" tabindex="-1">Contoh Soal Latihan <a class="header-anchor" href="#contoh-soal-latihan" aria-label="Permalink to &quot;Contoh Soal Latihan&quot;">​</a></h3><ol><li><p><strong>Soal</strong>: Seorang DBA ingin memberikan hak baca pada tabel &quot;employee&quot; kepada user &quot;U1&quot;. Tulis perintah SQL yang tepat.<br><strong>Jawaban</strong>: <code>GRANT SELECT ON employee TO U1;</code></p></li><li><p><strong>Soal</strong>: Jika user &quot;U2&quot; memiliki hak baca dan tulis pada tabel &quot;sales&quot;, tetapi DBA mencurigai pelanggaran, apa yang harus dilakukan untuk memeriksanya?<br><strong>Jawaban</strong>: Lakukan database audit dengan meninjau audit trail untuk operasi yang dilakukan &quot;U2&quot;.</p></li><li><p><strong>Soal</strong>: Dalam sistem dengan klasifikasi TS &gt; S &gt; C &gt; U, apakah user dengan clearance S bisa membaca data berlevel TS?<br><strong>Jawaban</strong>: Tidak, berdasarkan simple security property, class(S) harus ≥ class(TS).</p></li></ol><hr><h2 id="access-control" tabindex="-1">Access Control <a class="header-anchor" href="#access-control" aria-label="Permalink to &quot;Access Control&quot;">​</a></h2><ul><li><strong>Discretionary Access Control (DAC)</strong> menggunakan pemberian dan pencabutan hak akses (privileges) seperti SELECT, INSERT, UPDATE, DELETE.</li><li><strong>Mandatory Access Control (MAC)</strong> berdasarkan klasifikasi keamanan (TS, S, C, U) dengan aturan simple security (baca jika level user ≥ level data) dan star property (tulis jika level user ≤ level data).</li><li><strong>Role-Based Access Control (RBAC)</strong> menghubungkan hak akses dengan peran, mendukung hierarki peran dan batasan waktu.</li></ul><h3 id="seluruh-tabel-perbandingan-1" tabindex="-1">Seluruh Tabel Perbandingan <a class="header-anchor" href="#seluruh-tabel-perbandingan-1" aria-label="Permalink to &quot;Seluruh Tabel Perbandingan&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Aspek</th><th>DAC</th><th>MAC</th><th>RBAC</th></tr></thead><tbody><tr><td><strong>Pendekatan</strong></td><td>Hak akses spesifik</td><td>Klasifikasi tingkat</td><td>Berdasarkan peran</td></tr><tr><td><strong>Keunggulan</strong></td><td>Fleksibel</td><td>Perlindungan tinggi</td><td>Efisien untuk organisasi besar</td></tr><tr><td><strong>Kelemahan</strong></td><td>Rentan serangan</td><td>Terlalu kaku</td><td>Kompleksitas manajemen</td></tr></tbody></table><h3 id="contoh-soal-latihan-1" tabindex="-1">Contoh Soal Latihan <a class="header-anchor" href="#contoh-soal-latihan-1" aria-label="Permalink to &quot;Contoh Soal Latihan&quot;">​</a></h3><ol><li><p><strong>Soal</strong>: Buat perintah SQL untuk mencabut hak SELECT dari user &quot;U3&quot; pada tabel &quot;customer&quot;.<br><strong>Jawaban</strong>: <code>REVOKE SELECT ON customer FROM U3;</code></p></li><li><p><strong>Soal</strong>: Seorang user dengan clearance C ingin menulis data ke objek berlevel S. Apakah ini diperbolehkan?<br><strong>Jawaban</strong>: Tidak, karena berdasarkan star property, class(user) harus ≤ class(objek).</p></li><li><p><strong>Soal</strong>: Buat peran &quot;manager&quot; dan berikan hak SELECT pada tabel &quot;sales&quot; menggunakan RBAC.<br><strong>Jawaban</strong>: <code>CREATE ROLE manager; GRANT SELECT ON sales TO manager;</code></p></li></ol><hr><h2 id="introduction-to-statistical-database-security" tabindex="-1">Introduction to Statistical Database Security <a class="header-anchor" href="#introduction-to-statistical-database-security" aria-label="Permalink to &quot;Introduction to Statistical Database Security&quot;">​</a></h2><ul><li><strong>Tujuan utama</strong> menghasilkan statistik dari populasi tanpa mengungkap data individu.</li><li><strong>Kueri statistik</strong> mencakup COUNT, SUM, MIN, MAX, AVERAGE, dan STANDARD DEVIATION.</li><li><strong>Tantangan</strong> mencegah inferensi data individu dari kueri berulang, terutama pada populasi kecil.</li></ul><h3 id="contoh-soal-latihan-2" tabindex="-1">Contoh Soal Latihan <a class="header-anchor" href="#contoh-soal-latihan-2" aria-label="Permalink to &quot;Contoh Soal Latihan&quot;">​</a></h3><ol><li><p><strong>Soal</strong>: Sebuah statistik database hanya mengizinkan kueri agregat. Apakah kueri &quot;SELECT salary FROM employees WHERE id = 1&quot; diperbolehkan?<br><strong>Jawaban</strong>: Tidak, karena mengakses data individu, bukan agregat.</p></li><li><p><strong>Soal</strong>: Bagaimana cara mencegah inferensi data pada populasi dengan 2 orang?<br><strong>Jawaban</strong>: Batasi kueri atau gunakan inference control untuk melarang pengambilan data individu.</p></li><li><p><strong>Soal</strong>: Hitung rata-rata gaji dari 10 karyawan menggunakan kueri statistik.<br><strong>Jawaban</strong>: <code>SELECT AVG(salary) FROM employees WHERE condition_for_10_people;</code></p></li></ol><hr><h2 id="introduction-to-flow-control" tabindex="-1">Introduction to Flow Control <a class="header-anchor" href="#introduction-to-flow-control" aria-label="Permalink to &quot;Introduction to Flow Control&quot;">​</a></h2><ul><li><strong>Tujuan</strong> mengatur aliran informasi agar tidak sampai ke user tidak berwenang.</li><li><strong>Kebijakan aliran</strong> membagi informasi menjadi confidential (C) dan nonconfidential (N), hanya mengizinkan aliran kecuali dari C ke N.</li><li><strong>Saluran rahasia (covert channels)</strong> seperti storage dan timing channels dapat membocorkan informasi.</li></ul><h3 id="contoh-soal-latihan-3" tabindex="-1">Contoh Soal Latihan <a class="header-anchor" href="#contoh-soal-latihan-3" aria-label="Permalink to &quot;Contoh Soal Latihan&quot;">​</a></h3><ol><li><p><strong>Soal</strong>: Jika data confidential (C) mengalir ke data nonconfidential (N), apa yang terjadi?<br><strong>Jawaban</strong>: Melanggar kebijakan flow control, informasi bocor.</p></li><li><p><strong>Soal</strong>: Jelaskan bagaimana timing channel bisa digunakan untuk kebocoran data.<br><strong>Jawaban</strong>: Informasi dikirim melalui waktu eksekusi proses yang dapat diamati.</p></li><li><p><strong>Soal</strong>: Bagaimana mencegah covert channel dalam aplikasi?<br><strong>Jawaban</strong>: Hindari akses programmer ke data sensitif setelah aplikasi beroperasi.</p></li></ol><hr><h2 id="encryption-and-public-key-infrastructures" tabindex="-1">Encryption and Public Key Infrastructures <a class="header-anchor" href="#encryption-and-public-key-infrastructures" aria-label="Permalink to &quot;Encryption and Public Key Infrastructures&quot;">​</a></h2><ul><li><strong>Tujuan</strong> melindungi data saat transmisi dengan enkripsi.</li><li><strong>Jenis enkripsi</strong> meliputi symmetric-key (satu kunci) dan public-key (kunci publik dan privat).</li><li><strong>Standar</strong> seperti DES, AES, dan RSA digunakan, dengan tambahan salt bits untuk keamanan lebih.</li></ul><h3 id="contoh-soal-latihan-4" tabindex="-1">Contoh Soal Latihan <a class="header-anchor" href="#contoh-soal-latihan-4" aria-label="Permalink to &quot;Contoh Soal Latihan&quot;">​</a></h3><ol><li><p><strong>Soal</strong>: Apa perbedaan utama antara symmetric-key dan public-key encryption?<br><strong>Jawaban</strong>: Symmetric-key menggunakan satu kunci, public-key menggunakan kunci publik untuk enkripsi dan kunci privat untuk dekripsi.</p></li><li><p><strong>Soal</strong>: Bagaimana salt bits membantu keamanan enkripsi?<br><strong>Jawaban</strong>: Menambahkan bit acak membuat setiap enkripsi berbeda, mencegah serangan kamus.</p></li><li><p><strong>Soal</strong>: Jika data dienkripsi dengan AES, apa yang dibutuhkan untuk dekripsi?<br><strong>Jawaban</strong>: Kunci enkripsi yang sama (symmetric-key).</p></li></ol><hr><h2 id="application-security" tabindex="-1">Application Security <a class="header-anchor" href="#application-security" aria-label="Permalink to &quot;Application Security&quot;">​</a></h2><ul><li><strong>Ancaman utama</strong> meliputi SQL injection, cross-site scripting (XSS), dan kebocoran password.</li><li><strong>Solusi</strong> menggunakan prepared statement, autentikasi dua faktor, dan digital certificate.</li><li><strong>Audit trail</strong> penting untuk melacak akses dan perubahan data.</li></ul><h3 id="contoh-soal-latihan-5" tabindex="-1">Contoh Soal Latihan <a class="header-anchor" href="#contoh-soal-latihan-5" aria-label="Permalink to &quot;Contoh Soal Latihan&quot;">​</a></h3><ol><li><p><strong>Soal</strong>: Bagaimana mencegah SQL injection pada kueri &quot;SELECT * FROM user WHERE name = &#39; + name + &#39;&quot;?<br><strong>Jawaban</strong>: Gunakan prepared statement seperti &quot;SELECT * FROM user WHERE name = ?&quot;.</p></li><li><p><strong>Soal</strong>: Apa yang terjadi jika HTML tag dimasukkan dalam input user?<br><strong>Jawaban</strong>: Bisa menyebabkan XSS, strip tag menggunakan fungsi keamanan.</p></li><li><p><strong>Soal</strong>: Jelaskan cara kerja autentikasi dua faktor.<br><strong>Jawaban</strong>: Kombinasi password dan kode sekali pakai (misal via SMS atau device).</p></li></ol><hr><h2 id="daftar-istilah-penting" tabindex="-1">Daftar Istilah Penting <a class="header-anchor" href="#daftar-istilah-penting" aria-label="Permalink to &quot;Daftar Istilah Penting&quot;">​</a></h2><ul><li><strong>Database Security</strong>: Perlindungan data dalam sistem database dari akses tidak sah.</li><li><strong>Authorization</strong>: Proses memberikan hak akses kepada user atau peran.</li><li><strong>Discretionary Access Control (DAC)</strong>: Mekanisme keamanan berdasarkan pemberian hak akses fleksibel.</li><li><strong>Mandatory Access Control (MAC)</strong>: Mekanisme keamanan berdasarkan klasifikasi tingkat keamanan.</li><li><strong>Role-Based Access Control (RBAC)</strong>: Pengaturan akses berdasarkan peran dalam organisasi.</li><li><strong>Audit Trail</strong>: Catatan operasi database untuk keperluan keamanan.</li><li><strong>Encryption</strong>: Proses mengkodekan data untuk perlindungan.</li><li><strong>SQL Injection</strong>: Serangan dengan memasukkan kode SQL berbahaya ke input.</li><li><strong>Cross-Site Scripting (XSS)</strong>: Serangan dengan menyisipkan kode HTML/script di halaman web.</li><li><strong>Covert Channel</strong>: Saluran rahasia yang membocorkan informasi secara tidak sah.</li></ul><h3 id="glossarium" tabindex="-1">Glossarium <a class="header-anchor" href="#glossarium" aria-label="Permalink to &quot;Glossarium&quot;">​</a></h3><ul><li><strong>TS</strong>: Top Secret (Tingkat keamanan tertinggi).</li><li><strong>S</strong>: Secret.</li><li><strong>C</strong>: Confidential.</li><li><strong>U</strong>: Unclassified (Tingkat keamanan terendah).</li><li><strong>DES</strong>: Data Encryption Standard.</li><li><strong>AES</strong>: Advanced Encryption Standard.</li><li><strong>RSA</strong>: Algoritma enkripsi public-key berdasarkan faktor prime.</li></ul>',39)])])}const h=n(r,[["render",s]]);export{c as __pageData,h as default};
